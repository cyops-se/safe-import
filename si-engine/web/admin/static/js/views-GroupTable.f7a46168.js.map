{"version":3,"sources":["webpack:///./src/views/GroupTable.vue?a476","webpack:///src/views/GroupTable.vue","webpack:///./src/views/GroupTable.vue?13b0","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///./src/views/GroupTable.vue","webpack:///../../../src/components/VToolbar/index.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","headers","items","scopedSlots","_u","key","fn","_v","ref","on","_g","_b","model","value","callback","$$v","dialog","expression","editedItem","$set","_n","availableProgids","availableDiodeProxies","runatstart","defaultgroup","close","save","proxy","item","$event","editItem","deleteItem","_s","staticRenderFns","dialogDelete","search","loading","editedIndex","defaultItem","defaultMenuProps","offsetY","offsetOverflow","transition","VSelect","name","props","allowOverflow","type","default","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","data","lazySearch","computed","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","watch","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","created","destroyed","methods","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","VTextField","mergeData","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","delimiters","returnObject","editingIndex","computedCounterValue","$slots","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","toLocaleLowerCase","includes","setValue","updateEditing","updateCombobox","isUsingSlot","Boolean","$scopedSlots","updateTags","menuIndex","index","onPaste","pastedItemText","findExistingIndex","component","VBtn","VCard","VCardActions","VCardText","VCardTitle","VCheckbox","VCol","VCombobox","VContainer","VDataTable","VDialog","VDivider","VIcon","VRow","VSpacer","VTextarea","VToolbar","VToolbarTitle","VToolbarItems","baseMixins","autoGrow","noResize","rowHeight","Number","validator","v","isNaN","parseFloat","rows","parseInt","noResizeHandle","lazyValue","$nextTick","mounted","setTimeout","calculateInputHeight","height","minHeight","Math"],"mappings":"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","file":"js/views-GroupTable.f7a46168.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.items},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-toolbar',{attrs:{\"flat\":\"\"}},[_c('v-toolbar-title',[_vm._v(\"Groups\")]),_c('v-divider',{staticClass:\"mx-4\",attrs:{\"inset\":\"\",\"vertical\":\"\"}}),_c('v-spacer'),_c('v-dialog',{attrs:{\"max-width\":\"500px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({staticClass:\"mb-2\",attrs:{\"color\":\"primary\",\"dark\":\"\"}},'v-btn',attrs,false),on),[_vm._v(\" New Group \")])]}}]),model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"text-h5\"},[_vm._v(\"Group\")])]),_c('v-card-text',[_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"6\"}},[_c('v-text-field',{attrs:{\"label\":\"Name\",\"outlined\":\"\",\"hide-details\":\"\"},model:{value:(_vm.editedItem.name),callback:function ($$v) {_vm.$set(_vm.editedItem, \"name\", $$v)},expression:\"editedItem.name\"}})],1),_c('v-col',{attrs:{\"cols\":\"6\"}},[_c('v-text-field',{attrs:{\"label\":\"Sampling Interval\",\"type\":\"number\",\"outlined\":\"\",\"hide-details\":\"\"},model:{value:(_vm.editedItem.interval),callback:function ($$v) {_vm.$set(_vm.editedItem, \"interval\", _vm._n($$v))},expression:\"editedItem.interval\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"items\":_vm.availableProgids,\"label\":\"Server ProgID\",\"outlined\":\"\",\"hide-details\":\"\"},model:{value:(_vm.editedItem.progid),callback:function ($$v) {_vm.$set(_vm.editedItem, \"progid\", $$v)},expression:\"editedItem.progid\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"items\":_vm.availableDiodeProxies,\"item-text\":\"name\",\"label\":\"Endpoint\",\"outlined\":\"\",\"hide-details\":\"\"},model:{value:(_vm.editedItem.diodeproxy),callback:function ($$v) {_vm.$set(_vm.editedItem, \"diodeproxy\", $$v)},expression:\"editedItem.diodeproxy\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-checkbox',{staticClass:\"mt-n3\",attrs:{\"label\":\"Start automatically\",\"hide-details\":\"\",\"value\":_vm.editedItem ? _vm.editedItem.runatstart : true},model:{value:(_vm.editedItem.runatstart),callback:function ($$v) {_vm.$set(_vm.editedItem, \"runatstart\", $$v)},expression:\"editedItem.runatstart\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-checkbox',{staticClass:\"mt-n3\",attrs:{\"label\":\"Default group\",\"hide-details\":\"\",\"value\":_vm.editedItem ? _vm.editedItem.defaultgroup : true},model:{value:(_vm.editedItem.defaultgroup),callback:function ($$v) {_vm.$set(_vm.editedItem, \"defaultgroup\", $$v)},expression:\"editedItem.defaultgroup\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-textarea',{attrs:{\"label\":\"Description\",\"outlined\":\"\"},model:{value:(_vm.editedItem.description),callback:function ($$v) {_vm.$set(_vm.editedItem, \"description\", $$v)},expression:\"editedItem.description\"}})],1)],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.close}},[_vm._v(\" Cancel \")]),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.save}},[_vm._v(\" Save \")])],1)],1)],1)],1)]},proxy:true},{key:\"item.actions\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('v-icon',{staticClass:\"mr-2\",on:{\"click\":function($event){return _vm.editItem(item)}}},[_vm._v(\" mdi-pencil \")]),_c('v-icon',{on:{\"click\":function($event){return _vm.deleteItem(item)}}},[_vm._v(\" mdi-delete \")])]}},{key:\"item.defaultgroup\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('div',[_vm._v(_vm._s(item.defaultgroup ? \"Yes\": \"\"))])]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"items\"\r\n    class=\"elevation-1\"\r\n  >\r\n    <template v-slot:top>\r\n      <v-toolbar\r\n        flat\r\n      >\r\n        <v-toolbar-title>Groups</v-toolbar-title>\r\n        <v-divider\r\n          class=\"mx-4\"\r\n          inset\r\n          vertical\r\n        />\r\n        <v-spacer />\r\n        <v-dialog\r\n          v-model=\"dialog\"\r\n          max-width=\"500px\"\r\n        >\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn\r\n              color=\"primary\"\r\n              dark\r\n              class=\"mb-2\"\r\n              v-bind=\"attrs\"\r\n              v-on=\"on\"\r\n            >\r\n              New Group\r\n            </v-btn>\r\n          </template>\r\n          <v-card>\r\n            <v-card-title>\r\n              <span class=\"text-h5\">Group</span>\r\n            </v-card-title>\r\n\r\n            <v-card-text>\r\n              <v-container>\r\n                <v-row>\r\n                  <v-col cols=\"6\">\r\n                    <v-text-field\r\n                      v-model=\"editedItem.name\"\r\n                      label=\"Name\"\r\n                      outlined\r\n                      hide-details\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"6\">\r\n                    <v-text-field\r\n                      v-model.number=\"editedItem.interval\"\r\n                      label=\"Sampling Interval\"\r\n                      type=\"number\"\r\n                      outlined\r\n                      hide-details\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <v-combobox\r\n                      v-model=\"editedItem.progid\"\r\n                      :items=\"availableProgids\"\r\n                      label=\"Server ProgID\"\r\n                      outlined\r\n                      hide-details\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <v-combobox\r\n                      v-model=\"editedItem.diodeproxy\"\r\n                      :items=\"availableDiodeProxies\"\r\n                      item-text=\"name\"\r\n                      label=\"Endpoint\"\r\n                      outlined\r\n                      hide-details\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <v-checkbox\r\n                      v-model=\"editedItem.runatstart\"\r\n                      label=\"Start automatically\"\r\n                      hide-details\r\n                      class=\"mt-n3\"\r\n                      :value=\"editedItem ? editedItem.runatstart : true\"\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <v-checkbox\r\n                      v-model=\"editedItem.defaultgroup\"\r\n                      label=\"Default group\"\r\n                      hide-details\r\n                      class=\"mt-n3\"\r\n                      :value=\"editedItem ? editedItem.defaultgroup : true\"\r\n                    />\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <v-textarea\r\n                      v-model=\"editedItem.description\"\r\n                      label=\"Description\"\r\n                      outlined\r\n                    />\r\n                  </v-col>\r\n                </v-row>\r\n              </v-container>\r\n            </v-card-text>\r\n\r\n            <v-card-actions>\r\n              <v-spacer />\r\n              <v-btn\r\n                color=\"blue darken-1\"\r\n                text\r\n                @click=\"close\"\r\n              >\r\n                Cancel\r\n              </v-btn>\r\n              <v-btn\r\n                color=\"blue darken-1\"\r\n                text\r\n                @click=\"save\"\r\n              >\r\n                Save\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-dialog>\r\n      </v-toolbar>\r\n    </template>\r\n    <template v-slot:item.actions=\"{ item }\">\r\n      <v-icon\r\n        class=\"mr-2\"\r\n        @click=\"editItem(item)\"\r\n      >\r\n        mdi-pencil\r\n      </v-icon>\r\n      <v-icon\r\n        @click=\"deleteItem(item)\"\r\n      >\r\n        mdi-delete\r\n      </v-icon>\r\n    </template>\r\n    <template v-slot:item.defaultgroup=\"{ item }\">\r\n      <div>{{ item.defaultgroup ? \"Yes\": \"\" }}</div>\r\n    </template>\r\n  </v-data-table>\r\n</template>\r\n\r\n<script>\r\n  import ApiService from '@/services/api.service'\r\n\r\n  export default {\r\n    name: 'GroupTableView',\r\n\r\n    data: () => ({\r\n      dialog: false,\r\n      dialogDelete: false,\r\n      search: '',\r\n      loading: false,\r\n      headers: [\r\n        {\r\n          text: 'ID',\r\n          align: 'start',\r\n          filterable: false,\r\n          value: 'ID',\r\n          width: 75,\r\n        },\r\n        { text: 'Name', value: 'name', width: '20%' },\r\n        { text: 'Description', value: 'description', width: '30%' },\r\n        { text: 'OPC DA Server', value: 'progid', width: '10%' },\r\n        { text: 'Diode proxy', value: 'diodeproxy.name', width: '10%' },\r\n        { text: 'Sampling Interval (seconds)', value: 'interval', width: '10%' },\r\n        { text: 'Default', value: 'defaultgroup', width: '5%' },\r\n        { text: 'Actions', value: 'actions', width: 1, sortable: false },\r\n      ],\r\n      items: [],\r\n      availableProgids: [],\r\n      availableDiodeProxies: [],\r\n      editedIndex: -1,\r\n      editedItem: {},\r\n      defaultItem: {\r\n        runatstart: true,\r\n      },\r\n    }),\r\n\r\n    created () {\r\n      this.loading = true\r\n      this.editedItem = Object.assign({}, this.defaultItem)\r\n      this.editedIndex = -1\r\n      ApiService.get('data/opc_groups')\r\n        .then(response => {\r\n          this.items = response.data\r\n          this.loading = false\r\n        }).catch(response => {\r\n          console.log('ERROR response: ' + JSON.stringify(response))\r\n        })\r\n\r\n      ApiService.get('opc/server')\r\n        .then(response => {\r\n          for (var i = 0; i < response.data.length; i++) {\r\n            this.availableProgids.push(response.data[i].progid)\r\n          }\r\n          console.log('available progids: ' + this.availableProgids)\r\n        }).catch(response => {\r\n          console.log('ERROR response: ' + JSON.stringify(response))\r\n        })\r\n\r\n      ApiService.get('data/diode_proxies')\r\n        .then(response => {\r\n          this.availableDiodeProxies = response.data\r\n          console.log('available diode proxies: ' + JSON.stringify(this.availableDiodeProxies))\r\n        }).catch(response => {\r\n          console.log('ERROR response: ' + JSON.stringify(response))\r\n        })\r\n    },\r\n\r\n    methods: {\r\n      initialize () {},\r\n\r\n      editItem (item) {\r\n        this.editedIndex = this.items.indexOf(item)\r\n        this.editedItem = Object.assign({}, item)\r\n        this.dialog = true\r\n      },\r\n\r\n      deleteItem (item) {\r\n        ApiService.delete('data/opc_groups/' + item.ID)\r\n          .then(response => {\r\n            for (var i = 0; i < this.items.length; i++) {\r\n              if (this.items[i].ID === item.ID) this.items.splice(i, 1)\r\n            }\r\n            this.$notification.success('Group deleted')\r\n          }).catch(response => {\r\n            console.log('ERROR response: ' + response.message)\r\n          })\r\n      },\r\n\r\n      close () {\r\n        this.dialog = false\r\n        this.$nextTick(() => {\r\n          this.editedItem = Object.assign({}, this.defaultItem)\r\n          this.editedIndex = -1\r\n        })\r\n      },\r\n\r\n      save () {\r\n        if (this.editedIndex > -1) {\r\n          // Object.assign(this.items[this.editedIndex], this.editedItem)\r\n          ApiService.put('opc/group', this.editedItem)\r\n            .then(response => {\r\n              this.$notification.success('Group updated!')\r\n              this.items = response.data\r\n            }).catch(function (response) {\r\n              console.log('Failed to update group! ' + response)\r\n              this.$notification.error('Failed to update group!' + response)\r\n            })\r\n        } else {\r\n          ApiService.post('opc/group', this.editedItem)\r\n            .then(response => {\r\n              this.$notification.success('Group created!')\r\n              // this.items.push(response.data)\r\n              this.items = response.data\r\n            }).catch(function (response) {\r\n              console.log('Failed to create group! ' + response.message)\r\n              this.$notification.error('Failed to create group!' + response)\r\n            })\r\n        }\r\n        this.editedItem = Object.assign({}, this.defaultItem)\r\n        this.editedIndex = -1\r\n        this.close()\r\n      },\r\n    },\r\n  }\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GroupTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GroupTable.vue?vue&type=script&lang=js&\"","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./GroupTable.vue?vue&type=template&id=25d6e1b6&\"\nimport script from \"./GroupTable.vue?vue&type=script&lang=js&\"\nexport * from \"./GroupTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VCheckbox,VCol,VCombobox,VContainer,VDataTable,VDialog,VDivider,VIcon,VRow,VSpacer,VTextField,VTextarea,VToolbar,VToolbarTitle})\n","// Components\nimport VToolbar from './VToolbar'\n\n// Utilities\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VToolbarTitle = createSimpleFunctional('v-toolbar__title')\nconst VToolbarItems = createSimpleFunctional('v-toolbar__items')\n\nexport {\n  VToolbar,\n  VToolbarItems,\n  VToolbarTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VToolbar,\n    VToolbarItems,\n    VToolbarTitle,\n  },\n}\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}